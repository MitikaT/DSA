https://leetcode.com/problems/maximum-sum-circular-subarray/

class Solution {
public:
    int maxSubArray(vector<int>& nums){
        int res=nums[0];
        int max_ending=nums[0];
        for(int i=1;i<nums.size();i++){
            max_ending=((max_ending+nums[i])>nums[i])?(max_ending+nums[i]):nums[i];
            res=res>max_ending?res:max_ending;
        }
        return res;
    }
    int maxSubarraySumCircular(vector<int>& nums) {
        int max_normal=maxSubArray(nums);
        if(max_normal<0)
            return max_normal;
        int arr_sum=0;
        for(int i=0;i<nums.size();i++){
            arr_sum+=nums[i];
            nums[i]=-nums[i];
        }
        int max_circular=arr_sum+maxSubArray(nums);
        return max_normal>max_circular?max_normal:max_circular;
    }
};
