https://practice.geeksforgeeks.org/problems/number-of-occurrence2259/1/

class Solution{
public:	
	int first_occurrence(int nums[],int n,int target){
        int low=0,high=n-1,ans=-1;
        while(low<=high){
            int mid=(low+high)/2;
            if(nums[mid]>target)
                high=mid-1;
            else if(nums[mid]<target)
                low=mid+1;
            else{
                ans=mid;
                high=mid-1;
            }
        }
        return ans;
    }
    int last_occurrence(int nums[],int n,int target){
        int low=0,high=n-1,ans=-1;
        while(low<=high){
            int mid=(low+high)/2;
            if(nums[mid]>target)
                high=mid-1;
            else if(nums[mid]<target)
                low=mid+1;
            else{
                ans=mid;
                low=mid+1;
            }
        }
        return ans;
    }
	int count(int arr[], int n, int x) {
	    int first=first_occurrence(arr,n,x);
	    if(first==-1)
	        return 0;
	    int last=last_occurrence(arr,n,x);
	    return last-first+1;
	}
};
